from ctranslate2.converters import utils as utils
from ctranslate2.converters.converter import Converter as Converter
from ctranslate2.specs import common_spec as common_spec, transformer_spec as transformer_spec
from typing import Optional

class FairseqConverter(Converter):
    def __init__(self, model_path: str, data_dir: str, source_lang: Optional[str] = ..., target_lang: Optional[str] = ..., fixed_dictionary: Optional[str] = ..., no_default_special_tokens: bool = ..., user_dir: Optional[str] = ...) -> None: ...

def set_transformer_encoder(spec, module) -> None: ...
def set_transformer_decoder(spec, module, with_encoder_attention: bool = ...) -> None: ...
def set_input_layers(spec, module) -> None: ...
def set_transformer_encoder_layer(spec, module) -> None: ...
def set_transformer_decoder_layer(spec, module, with_encoder_attention: bool = ...) -> None: ...
def set_ffn(spec, module) -> None: ...
def set_multi_head_attention(spec, module, self_attention: bool = ...) -> None: ...
def set_layer_norm(spec, module) -> None: ...
def set_linear(spec, module) -> None: ...
def set_embeddings(spec, module) -> None: ...
def set_position_encodings(spec, module) -> None: ...
def main() -> None: ...
