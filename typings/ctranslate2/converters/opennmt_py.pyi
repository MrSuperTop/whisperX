from ctranslate2.converters import utils as utils
from ctranslate2.converters.converter import Converter as Converter
from ctranslate2.specs import common_spec as common_spec, transformer_spec as transformer_spec

def check_opt(opt, num_source_embeddings) -> None: ...
def get_vocabs(vocab): ...

class OpenNMTPyConverter(Converter):
    def __init__(self, model_path: str) -> None: ...

def set_transformer_spec(spec, variables) -> None: ...
def set_transformer_encoder(spec, variables) -> None: ...
def set_transformer_decoder(spec, variables, with_encoder_attention: bool = ...) -> None: ...
def set_input_layers(spec, variables, scope) -> None: ...
def set_transformer_encoder_layer(spec, variables, scope) -> None: ...
def set_transformer_decoder_layer(spec, variables, scope, with_encoder_attention: bool = ...) -> None: ...
def set_ffn(spec, variables, scope) -> None: ...
def set_multi_head_attention(spec, variables, scope, self_attention: bool = ...) -> None: ...
def set_layer_norm(spec, variables, scope) -> None: ...
def set_linear(spec, variables, scope) -> None: ...
def set_embeddings(spec, variables, scope) -> None: ...
def set_position_encodings(spec, variables, scope) -> None: ...
def main() -> None: ...
