import numpy as np
from .distance import cdist as cdist, l2_normalize as l2_normalize, pdist as pdist, to_condensed as to_condensed, to_squared as to_squared
from typing import Callable, List, Text, Tuple, Union

def linkage(X, method: str = ..., metric: str = ..., **kwargs): ...
def propagate_constraints(cannot_link: List[Tuple[int, int]], must_link: List[Tuple[int, int]]): ...
def pool(X: np.ndarray, metric: Text = ..., pooling_func: Union[Text, Callable] = ..., cannot_link: List[Tuple[int, int]] = ..., must_link: List[Tuple[int, int]] = ..., must_link_method: Text = ...): ...
def fcluster_auto(X, Z, metric: str = ...): ...
