import warnings
from _typeshed import Incomplete
from pyannote.core import Annotation

showwarning_orig = warnings.showwarning

def showwarning(message, category, *args, **kwargs) -> None: ...
def to_overlap(current_file: dict) -> Annotation: ...
def get_hypothesis(hypotheses, current_file): ...
def process_one(item, hypotheses: Incomplete | None = ..., metrics: Incomplete | None = ...): ...
def get_reports(protocol, subset, hypotheses, metrics): ...
def reindex(report): ...
def detection(protocol, subset, hypotheses, collar: float = ..., skip_overlap: bool = ...) -> None: ...
def segmentation(protocol, subset, hypotheses, tolerance: float = ...) -> None: ...
def diarization(protocol, subset, hypotheses, greedy: bool = ..., collar: float = ..., skip_overlap: bool = ...) -> None: ...
def identification(protocol, subset, hypotheses, collar: float = ..., skip_overlap: bool = ...) -> None: ...
def spotting(protocol, subset, latencies, hypotheses, output_prefix, filter_func: Incomplete | None = ...) -> None: ...
def main(): ...
